
USE PHD;

-- | DDL do banco de dados da aplicação Paixão Help Desk

-- | Versão: 1
-- | Data:   2022-09-01

CREATE TABLE PHD_SCHEMA_VERSION (
    `version` INT NOT NULL
);

INSERT INTO PHD_SCHEMA_VERSION VALUES (1);

CREATE TABLE PHD_USER (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `name` VARCHAR(124) NOT NULL,
    `email` VARCHAR(124) NOT NULL,
    `password` VARCHAR(248) NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME

);

CREATE TABLE PHD_USER_SESSION (

    `id` VARCHAR(255) PRIMARY KEY,

    `user_id` INT NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (`user_id`) REFERENCES PHD_USER(`id`)

);

CREATE TABLE PHD_UNIT (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `name` VARCHAR(124) NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME

);

CREATE TABLE PHD_USER_AND_UNIT_ASSOC (

    `user_id` INT NOT NULL,
    `unit_id` INT NOT NULL,

    FOREIGN KEY (`user_id`) REFERENCES PHD_USER(`id`),
    FOREIGN KEY (`unit_id`) REFERENCES PHD_UNIT(`id`)

);

CREATE TABLE PHD_SERVICE_CALL_TAG (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `name` VARCHAR(124) NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME

);

CREATE TABLE PHD_SERVICE_STATE (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `name` VARCHAR(124) NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME

);

CREATE TABLE PHD_SERVICE_CALL (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `unit_id` INT NOT NULL,
    `creator_id` INT NOT NULL,
    `responsible_id` INT NOT NULL,
    `status_id` INT NOT NULL,
    `title` VARCHAR(124) NOT NULL,
    `description` TEXT,
    `order` INT NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME,

    FOREIGN KEY (`creator_id`) REFERENCES PHD_USER(`id`),
    FOREIGN KEY (`responsible_id`) REFERENCES PHD_USER(`id`),
    FOREIGN KEY (`unit_id`) REFERENCES PHD_UNIT(`id`),
    FOREIGN KEY (`status_id`) REFERENCES PHD_SERVICE_STATE(`id`)

);

CREATE TABLE PHD_SERVICE_CALL_HISTORY (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `unit_id` INT NOT NULL,
    `responsible_id` INT NOT NULL,
    `status_id` INT NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (`responsible_id`) REFERENCES PHD_USER(`id`),
    FOREIGN KEY (`unit_id`) REFERENCES PHD_UNIT(`id`),
    FOREIGN KEY (`status_id`) REFERENCES PHD_SERVICE_STATE(`id`)

);

CREATE TABLE PHD_SERVICE_CALL_AND_SERVICE_CALL_TAG_ASSOC (

    `tag_id` INT NOT NULL,
    `call_id` INT NOT NULL,

    FOREIGN KEY (`tag_id`) REFERENCES PHD_SERVICE_CALL_TAG(`id`),
    FOREIGN KEY (`call_id`) REFERENCES PHD_SERVICE_CALL(`id`)

);

CREATE TABLE PHD_SERVICE_CALL_COMMENT (

    `id` INT PRIMARY KEY AUTO_INCREMENT,

    `content` TEXT,
    `creator_id` INT NOT NULL,
    `call_id` INT NOT NULL,

    `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
    `updated_at` DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    `deleted_at` DATETIME,

    FOREIGN KEY (`creator_id`) REFERENCES PHD_USER(`id`),
    FOREIGN KEY (`call_id`) REFERENCES PHD_SERVICE_CALL(`id`)

);